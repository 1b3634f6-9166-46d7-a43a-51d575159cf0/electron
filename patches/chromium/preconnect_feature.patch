From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexey Kuts <kruntuid@gmail.com>
Date: Fri, 28 Jun 2019 22:32:49 +0300
Subject: 	preconnect feature

The PreconnectManager in Chrome depends on Profile only for a testing-only feature which we don't use.  
This patch allows us to avoid an unsafe reinterpret_cast and maintain type safety. 
This could potentially be upstreamed if the testing-only feature were refactored 
in such a way that Chrome's tests could still run successfully while also removing the dependency on Profile.

diff --git a/chrome/browser/predictors/preconnect_manager.cc b/chrome/browser/predictors/preconnect_manager.cc
index 149244ad99ff8e70011164d7d337b9fdd607e4ae..e41d3c19b6def1ab3f16827920ab8f090e67857c 100644
--- a/chrome/browser/predictors/preconnect_manager.cc
+++ b/chrome/browser/predictors/preconnect_manager.cc
@@ -59,7 +59,7 @@ PreresolveJob::PreresolveJob(PreresolveJob&& other) = default;
 PreresolveJob::~PreresolveJob() = default;
 
 PreconnectManager::PreconnectManager(base::WeakPtr<Delegate> delegate,
-                                     Profile* profile)
+                                     content::BrowserContext* profile)
     : delegate_(std::move(delegate)),
       profile_(profile),
       inflight_preresolves_count_(0),
@@ -309,12 +309,6 @@ network::mojom::NetworkContext* PreconnectManager::GetNetworkContext() const {
   if (network_context_)
     return network_context_;
 
-  if (profile_->AsTestingProfile()) {
-    // We're testing and |network_context_| wasn't set. Return nullptr to avoid
-    // hitting the network.
-    return nullptr;
-  }
-
   return content::BrowserContext::GetDefaultStoragePartition(profile_)
       ->GetNetworkContext();
 }
diff --git a/chrome/browser/predictors/preconnect_manager.h b/chrome/browser/predictors/preconnect_manager.h
index 5ff5eb627f783b0fc490313fbc1c8577942136ad..9844abdd783edbc04be64ae0be9c384cbc2ddc5c 100644
--- a/chrome/browser/predictors/preconnect_manager.h
+++ b/chrome/browser/predictors/preconnect_manager.h
@@ -21,6 +21,10 @@
 
 class Profile;
 
+namespace content {
+class BrowserContext;
+}
+
 namespace network {
 namespace mojom {
 class NetworkContext;
@@ -134,7 +138,7 @@ class PreconnectManager {
 
   static const size_t kMaxInflightPreresolves = 3;
 
-  PreconnectManager(base::WeakPtr<Delegate> delegate, Profile* profile);
+  PreconnectManager(base::WeakPtr<Delegate> delegate, content::BrowserContext* profile);
   virtual ~PreconnectManager();
 
   // Starts preconnect and preresolve jobs keyed by |url|.
@@ -184,7 +188,7 @@ class PreconnectManager {
   network::mojom::NetworkContext* GetNetworkContext() const;
 
   base::WeakPtr<Delegate> delegate_;
-  Profile* const profile_;
+  content::BrowserContext* const profile_;
   std::list<PreresolveJobId> queued_jobs_;
   PreresolveJobMap preresolve_jobs_;
   std::map<std::string, std::unique_ptr<PreresolveInfo>> preresolve_info_;
